#!/usr/bin/env python3
"""
Quick test to verify model information in chat response HTML
"""
import requests
import re

def test_model_in_html():
    """Test if model information appears in the rendered HTML"""
    print("üß™ Testing Model Information in HTML Response")
    print("=" * 50)
    
    base_url = "http://localhost:5000"
    session = requests.Session()
    
    # Login first
    try:
        login_page = session.get(f"{base_url}/auth/login")
        csrf_match = re.search(r'name="csrf_token".*?value="([^"]+)"', login_page.text)
        csrf_token = csrf_match.group(1) if csrf_match else None
        
        login_data = {'email': 'demo@example.com', 'password': 'demo123'}
        if csrf_token:
            login_data['csrf_token'] = csrf_token
        
        login_response = session.post(f"{base_url}/auth/login", data=login_data, allow_redirects=False)
        
        if login_response.status_code != 302:
            print("‚ùå Login failed")
            return False
            
        print("‚úÖ Login successful")
        
    except Exception as e:
        print(f"‚ùå Login error: {e}")
        return False
    
    # Quick form test with a very simple message
    try:
        print("\nüìù Testing simple form submission...")
        
        # Just check the template structure first
        chat_page = session.get(f"{base_url}/ai/chat")
        
        if 'Generated by' in chat_page.text:
            print("‚ö†Ô∏è Template already contains model text (from previous response)")
        
        # Check if template has the correct structure for displaying model info
        if 'model_used' in chat_page.text:
            print("‚úÖ Template contains model_used variable reference")
        elif 'Generated by' in chat_page.text:
            print("‚úÖ Template has model display structure")
        else:
            print("‚ÑπÔ∏è Template structure check:")
            # Look for the alert success div
            if 'alert alert-success' in chat_page.text:
                print("  ‚úÖ AI response container found")
            if 'fas fa-robot' in chat_page.text:
                print("  ‚úÖ Robot icon for model info found")
            else:
                print("  ‚ö†Ô∏è Model display elements not found in template")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Test error: {e}")
        return False

if __name__ == "__main__":
    success = test_model_in_html()
    if success:
        print("\n‚úÖ Template structure appears correct")
        print("üí° To fully test:")
        print("  1. Use Simple Browser at http://localhost:5000/ai/chat")
        print("  2. Login with demo@example.com / demo123")
        print("  3. Submit a simple message like 'hello'")
        print("  4. Look for timestamp and model information below the AI response")
    else:
        print("\n‚ùå Template structure needs review")
