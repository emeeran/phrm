Metadata-Version: 2.4
Name: phrm
Version: 1.0.0
Summary: Personal Health Record Manager - A secure and optimized health record management system
Author-email: PHRM Team <team@phrm.com>
Project-URL: Homepage, https://github.com/phrm/phrm
Project-URL: Documentation, https://github.com/phrm/phrm/docs
Project-URL: Repository, https://github.com/emeeran/phrm.git
Project-URL: Bug Tracker, https://github.com/phrm/phrm/issues
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: Flask>=3.1.0
Requires-Dist: Flask-SQLAlchemy>=3.1.1
Requires-Dist: Flask-Login>=0.6.3
Requires-Dist: Flask-WTF>=1.2.2
Requires-Dist: Flask-Migrate>=4.0.7
Requires-Dist: Flask-Mail>=0.10.0
Requires-Dist: Flask-Session>=0.8.0
Requires-Dist: Flask-Limiter>=3.8.0
Requires-Dist: Flask-Talisman>=1.1.0
Requires-Dist: WTForms>=3.2.1
Requires-Dist: bcrypt>=4.2.1
Requires-Dist: cryptography>=43.0.0
Requires-Dist: SQLAlchemy>=2.0.30
Requires-Dist: psycopg2-binary>=2.9.9
Requires-Dist: redis>=5.2.0
Requires-Dist: Flask-Caching>=2.3.0
Requires-Dist: gunicorn>=22.0.0
Requires-Dist: gevent>=24.2.1
Requires-Dist: openai>=1.50.0
Requires-Dist: requests>=2.32.3
Requires-Dist: PyMuPDF>=1.24.0
Requires-Dist: Pillow>=10.4.0
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: psutil>=6.0.0
Requires-Dist: requests>=2.32.3
Requires-Dist: Pillow>=10.4.0
Requires-Dist: Werkzeug>=3.1.0
Requires-Dist: click>=8.1.7
Requires-Dist: itsdangerous>=2.2.0
Requires-Dist: MarkupSafe>=3.0.0
Requires-Dist: Jinja2>=3.1.4
Requires-Dist: blinker>=1.9.0
Requires-Dist: email-validator>=2.2.0
Provides-Extra: dev
Requires-Dist: pytest>=8.3.4; extra == "dev"
Requires-Dist: pytest-flask>=1.3.0; extra == "dev"
Requires-Dist: pytest-cov>=6.0.0; extra == "dev"
Requires-Dist: coverage>=7.6.9; extra == "dev"
Requires-Dist: ruff>=0.8.7; extra == "dev"
Requires-Dist: mypy>=1.13.0; extra == "dev"
Requires-Dist: black>=24.12.0; extra == "dev"
Requires-Dist: pre-commit>=4.0.1; extra == "dev"
Provides-Extra: ai
Requires-Dist: langchain>=0.3.12; extra == "ai"
Requires-Dist: langchain-community>=0.3.12; extra == "ai"
Requires-Dist: langchain-openai>=0.2.14; extra == "ai"
Provides-Extra: test
Requires-Dist: pytest>=8.3.4; extra == "test"
Requires-Dist: pytest-flask>=1.3.0; extra == "test"
Requires-Dist: pytest-cov>=6.0.0; extra == "test"
Requires-Dist: coverage>=7.6.9; extra == "test"
Provides-Extra: lint
Requires-Dist: ruff>=0.8.7; extra == "lint"
Requires-Dist: mypy>=1.13.0; extra == "lint"
Requires-Dist: black>=24.12.0; extra == "lint"
Requires-Dist: types-redis>=4.6.0.20241004; extra == "lint"
Requires-Dist: types-requests>=2.32.0.20241016; extra == "lint"
Requires-Dist: types-Pillow>=10.2.0.20240822; extra == "lint"

# Personal Health Record Manager (PHRM)

## Overview
PHRM is a Flask-based web application for managing personal health records, featuring AI-powered chat, symptom checker, and document summarization. The default AI provider is MedGemma (via Hugging Face Inference API only), with GROQ and DEEPSEEK as fallbacks.

## AI Provider Fallback Logic
- **Primary:** MedGemma 27B (Hugging Face Inference API - remote only, no local models)
- **Fallbacks:** GROQ, DEEPSEEK

## Setup
1. Clone the repo and install dependencies:
   ```sh
   uv sync
   ```
2. Configure `.env` with your API keys (see example in repo).
3. Run the app:
   ```sh
   python run.py
   ```

## Testing
- Run `python test_ai_providers.py` to check AI provider status.

## Production Cleanup
- All test, debug, and temporary scripts are removed or ignored via `.gitignore` for production deployments.
- For best performance, ensure no `__pycache__` or `.pyc` files remain in the codebase.

## Maintenance
- Keep dependencies up to date in `requirements.txt`.
- Review `.env` for only necessary secrets and keys.
- For further optimization, review and refactor utility modules in `app/utils/` as needed.

## Notes
- MedGemma models require gated access on Hugging Face.
- Remove or ignore test scripts (`test_*.py`) in production deployments.

## Environment Variables

Your `.env` file should look like:

```
HUGGINGFACE_ACCESS_TOKEN=hf_...
HUGGINGFACE_MODEL=google/medgemma-4b-it
GROQ_API_KEY=...
GROQ_MODEL=deepseek-r1-distill-llama-70b
DEEPSEEK_API_KEY=...
DEEPSEEK_MODEL=deepseek-chat
```

- Ensure your Hugging Face token has access to MedGemma models (gated repo).
- Only production keys should be present in `.env`.

## Production Deployment

1. **Install dependencies and create a virtual environment:**
   ```zsh
   python3 -m venv .venv
   source .venv/bin/activate
   pip install -r requirements.txt
   pip install gunicorn
   ```
2. **Copy and edit the production .env:**
   ```zsh
   cp .env.production.example .env
   # Edit .env with your production secrets and keys
   ```
3. **Run with Gunicorn (recommended for production):**
   ```zsh
   ./run_gunicorn.sh
   # App will be available at http://localhost:8000
   ```

- For systemd or advanced deployment, create a service file pointing to `run_gunicorn.sh`.
- Use a real database (e.g., PostgreSQL) for production, not SQLite.
- Set up HTTPS and a reverse proxy (e.g., Nginx) for secure public access.
