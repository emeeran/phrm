/* PHRM Optimized JS - Minified for Production */
!function(){"use strict";function e(e,t,n){let o;return function(...r){const a=()=>{o=null,n||e(...r)},i=n&&!o;clearTimeout(o),o=setTimeout(a,t),i&&e(...r)}}function t(e,t){let n;return function(){const o=arguments,r=this;n||(e.apply(r,o),n=!0,setTimeout((()=>n=!1),t))}}function n(e,t="info",n=5e3){const o=document.createElement("div");o.className=`alert alert-${t} alert-dismissible fade show position-fixed`;o.style.cssText="top:20px;right:20px;z-index:9999;min-width:300px;";o.innerHTML=`${e}<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>`;document.body.appendChild(o);setTimeout((()=>{o.classList.remove("show"),setTimeout((()=>o.remove()),300)}),n)}function o(e){if(0===e)return"0 B";const t=["B","KB","MB","GB"],n=Math.floor(Math.log(e)/Math.log(1024));return`${(e/Math.pow(1024,n)).toFixed(1)} ${t[n]}`}function r(e){const t=["image/jpeg","image/jpg","image/png","application/pdf","text/plain"],o=[];return Array.from(e).forEach((e=>{e.size>16777216&&o.push(`File "${e.name}" exceeds the 16MB size limit.`),t.includes(e.type)||o.push(`File "${e.name}" is not an allowed file type. Please upload JPG, PNG, PDF, or TXT files only.`)})),o.length>0?(n("File validation errors:\n\n"+o.join("\n"),"error"),!1):!0}function a(e){e.preventDefault(),e.stopPropagation()}function i(){const e=document.createElement("div");return e.className="upload-progress",e.innerHTML='\n        <div class="progress">\n            <div class="progress-bar progress-bar-striped progress-bar-animated" \n                 role="progressbar" style="width: 100%">\n                Uploading...\n            </div>\n        </div>\n    ',document.body.appendChild(e),e}function s(e,t={}){try{const n=localStorage.getItem(e);return n?JSON.parse(n):t}catch(n){return console.warn("Failed to parse localStorage item:",e),t}}function c(e,t){try{return localStorage.setItem(e,JSON.stringify(t)),!0}catch(n){return console.warn("Failed to set localStorage item:",e),!1}}function l(e){try{return localStorage.removeItem(e),!0}catch(t){return console.warn("Failed to remove localStorage item:",e),!1}}class u{constructor(e){this.inputElement=document.getElementById(e),this.selectedFiles=[],this.init()}init(){this.inputElement&&(this.inputElement.addEventListener("change",(e=>{this.selectedFiles=Array.from(this.inputElement.files),this.updatePreview()})),this.setupDragAndDrop())}updatePreview(){const e=document.getElementById("file-preview");e&&(this.selectedFiles.length>0?(e.style.display="block",e.innerHTML=this.generatePreviewHTML(),this.attachPreviewEventListeners()):(e.style.display="none",e.innerHTML=""))}generatePreviewHTML(){const e=`\n            <div class="d-flex justify-content-between align-items-center mb-3">\n                <h6 class="mb-0">Selected Files (${this.selectedFiles.length}):</h6>\n                <button type="button" class="btn btn-sm btn-outline-danger" id="clear-all-files">\n                    <i class="fas fa-trash"></i> Clear All\n                </button>\n            </div>\n            <div class="row" id="file-list">\n        `,t=this.selectedFiles.map(((e,t)=>{let n="";return n=e.type.match("image.*")?'<img class="file-preview-img card-img-top" style="height: 120px; object-fit: cover;" alt="Preview">':"application/pdf"===e.type?'<div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height: 120px;"><i class="fas fa-file-pdf fa-3x text-danger"></i></div>':'<div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height: 120px;"><i class="fas fa-file fa-3x text-secondary"></i></div>',`\n                <div class="col-md-4 mb-3" data-file-index="${t}">\n                    <div class="card position-relative">\n                        ${n}\n                        <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 m-1 remove-file-btn" \n                                data-file-index="${t}" style="z-index: 5;">\n                            <i class="fas fa-times"></i>\n                        </button>\n                        <div class="card-body p-2">\n                            <p class="card-text small text-truncate" title="${e.name}">${e.name}</p>\n                            <small class="text-muted">${o(e.size)}</small>\n                        </div>\n                    </div>\n                </div>\n            `})).join("");return e+t+"</div>"}attachPreviewEventListeners(){this.selectedFiles.forEach(((e,t)=>{if(e.type.match("image.*")){const e=new FileReader;e.onload=e=>{const n=document.querySelector(`[data-file-index="${t}"] .file-preview-img`);n&&(n.src=e.target.result)},e.readAsDataURL(e)}})),document.querySelectorAll(".remove-file-btn").forEach((e=>{e.addEventListener("click",(()=>{const t=parseInt(e.dataset.fileIndex);this.removeFile(t)}))}));const e=document.getElementById("clear-all-files");e&&e.addEventListener("click",(()=>{this.selectedFiles=[],this.updateInputFiles(),this.updatePreview()}))}removeFile(e){this.selectedFiles.splice(e,1),this.updateInputFiles(),this.updatePreview()}updateInputFiles(){const e=new DataTransfer;this.selectedFiles.forEach((t=>e.items.add(t))),this.inputElement.files=e.files}setupDragAndDrop(){const e=this.inputElement.closest(".mb-3");if(!e)return;e.style.position="relative";const t=this.createDropOverlay();e.appendChild(t),["dragenter","dragover","dragleave","drop"].forEach((t=>{e.addEventListener(t,a,!1),document.body.addEventListener(t,a,!1)})),["dragenter","dragover"].forEach((n=>{e.addEventListener(n,(()=>{t.style.display="flex"}),!1)})),["dragleave","drop"].forEach((n=>{e.addEventListener(n,(()=>{t.style.display="none"}),!1)})),e.addEventListener("drop",(e=>{const t=e.dataTransfer.files;this.inputElement.files=t,this.inputElement.dispatchEvent(new Event("change",{bubbles:!0}))}))}createDropOverlay(){const e=document.createElement("div");return e.className="file-drop-overlay",e.style.cssText="\n            position: absolute; top: 0; left: 0; right: 0; bottom: 0;\n            background: rgba(66, 135, 245, 0.1); border: 2px dashed #4287f5;\n            border-radius: 0.375rem; display: none; align-items: center;\n            justify-content: center; font-weight: bold; color: #4287f5;\n            z-index: 10; flex-direction: column;\n        ",e.innerHTML='<i class="fas fa-cloud-upload-alt fa-2x mb-2"></i><br>Drop files here',e}}class d{constructor(){this.chatForm=document.getElementById("chat-form"),this.chatInput=document.getElementById("chat-input"),this.chatMessages=document.getElementById("chat-messages"),this.conversationHistory=[],this.init()}init(){this.chatForm&&this.chatInput&&this.chatMessages&&(this.loadConversationHistory(),this.setupEventListeners(),this.initializeVoiceInput(),this.initializeModeSelectors(),this.chatInput.focus())}loadConversationHistory(){try{const e=localStorage.getItem("chatConversation");if(e){const t=JSON.parse(e);Array.isArray(t)&&t.length>0&&(this.chatMessages.innerHTML="",t.forEach((e=>{this.appendMessage(e.role,e.content,e.timestamp)})),this.conversationHistory=t,this.chatMessages.scrollTop=this.chatMessages.scrollHeight)}}catch(e){console.error("Error loading conversation history:",e)}}setupEventListeners(){this.chatInput.addEventListener("keydown",(e=>{"Enter"===e.key&&!e.shiftKey&&(e.preventDefault(),this.handleSubmit())})),this.chatForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleSubmit()})),document.querySelectorAll(".suggestion-btn").forEach((e=>{e.addEventListener("click",(()=>{this.chatInput.value=e.textContent.trim(),this.handleSubmit()}))})),this.setupActionButtons()}setupActionButtons(){const e=document.getElementById("clear-chat"),t=document.getElementById("copy-chat"),n=document.getElementById("export-md");e&&e.addEventListener("click",(()=>{confirm("Are you sure you want to clear the conversation history?")&&this.clearConversation()})),t&&t.addEventListener("click",(()=>this.copyConversation(t))),n&&n.addEventListener("click",(()=>this.exportToMarkdown(n)))}initializeVoiceInput(){const e=document.getElementById("voice-input-btn");e&&"webkitSpeechRecognition"in window&&e.addEventListener("click",(()=>this.startVoiceInput()))}initializeModeSelectors(){const e=document.getElementById("mode-selector"),t=document.getElementById("patient-selector-container"),n=document.getElementById("patient-selector");e&&t&&(e.addEventListener("change",(()=>{const o="private"===e.value;t.classList.toggle("hidden",!o),!o&&n&&(n.value="self"),this.updateWelcomeMessage()})),n&&n.addEventListener("change",(()=>this.updateWelcomeMessage())),t.classList.toggle("hidden","private"!==e.value),this.updateWelcomeMessage())}updateWelcomeMessage(){const e=document.querySelector(".welcome-message");if(!e)return;const t=document.getElementById("mode-selector")?.value||"public",n=document.getElementById("patient-selector")?.value||"self";let o,r;if("public"===t)o="Welcome to your Health Assistant",r="Ask me general health questions. I won't access your personal medical records in this mode.";else if("self"===n)o="Welcome to your Health Assistant",r="Ask me anything about your health, medications, or use the quick questions. I have access to your personal medical records.";else{const e=document.getElementById("patient-selector"),t=e?.options[e.selectedIndex]?.text||"Patient";o=`Health Assistant for ${t}`,r=`Ask me about ${t}'s health records, medications, or medical history.`}e.innerHTML=`\n            <i class="fas fa-comment-medical fa-3x mb-3"></i>\n            <h5>${o}</h5>\n            <p>${r}</p>\n        `}async handleSubmit(){const e=this.chatInput.value.trim();if(!e)return;const t=(new Date).toISOString();this.appendMessage("user",e,t),this.chatInput.value="",this.conversationHistory.push({role:"user",content:e,timestamp:t}),this.saveConversation();const n=this.showTypingIndicator();try{const o=await this.sendMessage(e);this.chatMessages.removeChild(n);const r=(new Date).toISOString();this.appendMessage("assistant",o.response,r,o.model),this.conversationHistory.push({role:"assistant",content:o.response,timestamp:r}),this.saveConversation()}catch(e){console.error("Chat error:",e),this.chatMessages.removeChild(n);const t="Sorry, there was an error processing your request. Please try again.",o=(new Date).toISOString();this.appendMessage("assistant",t,o),this.conversationHistory.push({role:"assistant",content:t,timestamp:o}),this.saveConversation()}}async sendMessage(e){const t=document.getElementById("mode-selector")?.value||"private",n=document.getElementById("patient-selector")?.value||"self",o=await fetch("/ai/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e,mode:t,patient:n})});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);return o.json()}showTypingIndicator(){const e=document.createElement("div");return e.className="typing-indicator",e.innerHTML="<span></span><span></span><span></span>",this.chatMessages.appendChild(e),this.chatMessages.scrollTop=this.chatMessages.scrollHeight,e}appendMessage(e,t,n,o="MedGemma"){const r=document.createElement("div");r.className=`chat-message ${e}-message`;const a=(new Date(n)).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),i="user"===e?'<i class="fas fa-user"></i>':'<i class="fas fa-robot"></i>',s="user"===e?"You":`Health Assistant [${o}]`;let c;if("user"===e)c=`<div>${t}</div>`;else try{c=`<div class="markdown-body">${marked.parse(t)}</div>`}catch(e){console.error("Error rendering markdown:",e),c=`<div>${t}</div>`}r.innerHTML=`\n            <div class="chat-avatar">${i}</div>\n            <div class="message-content">\n                <div class="message-sender">${s} <span class="message-time">${a}</span></div>\n                ${c}\n            </div>\n        `,this.chatMessages.appendChild(r),this.chatMessages.scrollTop=this.chatMessages.scrollHeight}saveConversation(){localStorage.setItem("chatConversation",JSON.stringify(this.conversationHistory))}clearConversation(){this.chatMessages.innerHTML="",this.conversationHistory=[],localStorage.removeItem("chatConversation")}copyConversation(e){if(0===this.conversationHistory.length)return void alert("No conversation to copy");const t=this.conversationHistory.map((e=>{const t="user"===e.role?"You":"Health Assistant",n=(new Date(e.timestamp)).toLocaleString();return`${t} (${n}):\n${e.content}\n`})).join("\n");navigator.clipboard.writeText(t).then((()=>{this.showButtonFeedback(e,"success")})).catch((e=>{console.error("Failed to copy text:",e),alert("Failed to copy conversation to clipboard")}))}exportToMarkdown(e){if(0===this.conversationHistory.length)return void alert("No conversation to export");const t=new Date,n=t.toISOString().split("T")[0],o=t.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"});let r="# Health Assistant Conversation\n\n";r+=`**Date:** ${n} at ${o}\n`,r+=`**Total Messages:** ${this.conversationHistory.length}\n\n---\n\n`,this.conversationHistory.forEach(((e,t)=>{const n="user"===e.role?"👤 You":"🤖 Health Assistant",o=(new Date(e.timestamp)).toLocaleString();r+=`## ${n}\n*${o}*\n\n${e.content}\n\n`}));const a=new Blob([r],{type:"text/markdown"}),i=document.createElement("a");i.href=URL.createObjectURL(a),i.download=`health-chat-${n}_${o.replace(":","-")}.md`,document.body.appendChild(i),i.click(),document.body.removeChild(i),this.showButtonFeedback(e,"success")}showButtonFeedback(e,t){const n=e.innerHTML,o="success"===t?"✓":"✗";e.innerHTML=o,e.classList.add("success"===t?"btn-success":"btn-danger"),setTimeout((()=>{e.innerHTML=n,e.classList.remove("success"===t?"btn-success":"btn-danger")}),1500)}}function p(){document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach((e=>{new bootstrap.Tooltip(e)})),document.querySelectorAll('[data-bs-toggle="popover"]').forEach((e=>{new bootstrap.Popover(e)}))}function h(){document.querySelectorAll(".file-upload").forEach((e=>{if("documents-input"===e.id)return;e.addEventListener("change",(function(){const e=this.nextElementSibling;if(this.files?.length>0){const t=Array.from(this.files).map((e=>e.name)).join(", ");if(e.textContent=t,this.files[0].type.match("image.*")){const e=new FileReader;e.onload=e=>{const t=document.querySelector(".file-preview");t&&(t.innerHTML=`<img src="${e.target.result}" class="img-fluid img-thumbnail mb-3" alt="Preview">`)},e.readAsDataURL(this.files[0])}}else e.textContent="Choose file..."}))}))}function m(){const e=document.querySelectorAll(".filter-btn");0!==e.length&&e.forEach((e=>{e.addEventListener("click",(function(){const t=this.dataset.filter,n=document.querySelectorAll(".record-item");e.forEach((e=>e.classList.remove("active"))),this.classList.add("active"),n.forEach((e=>{e.style.display="all"===t||e.dataset.type===t?"block":"none"}))}))}))}function f(){document.querySelectorAll("[data-confirm]").forEach((e=>{e.addEventListener("click",(function(e){confirm(this.dataset.confirm)||e.preventDefault()}))}))}function g(){const e=document.getElementById("add-medication");if(!e)return;let t=document.querySelectorAll(".medication-item").length;e.addEventListener("click",(function(){const e=document.getElementById("medications-container"),n=document.createElement("div");n.className="medication-item row mb-3",n.innerHTML=`\n            <div class="col-md-4">\n                <input type="text" class="form-control" name="medication_name_${t}" placeholder="Medication Name" required>\n            </div>\n            <div class="col-md-3">\n                <input type="text" class="form-control" name="medication_dosage_${t}" placeholder="Dosage">\n            </div>\n            <div class="col-md-3">\n                <input type="text" class="form-control" name="medication_frequency_${t}" placeholder="Frequency">\n            </div>\n            <div class="col-md-2">\n                <button type="button" class="btn btn-danger remove-medication">Remove</button>\n            </div>\n        `,e.appendChild(n),t++,n.querySelector(".remove-medication").addEventListener("click",(function(){this.closest(".medication-item").remove()}))})),document.addEventListener("click",(function(e){e.target?.classList.contains("remove-medication")&&e.target.closest(".medication-item").remove()}))}function v(){const e=document.querySelector('input[name="date_range"]');e&&flatpickr&&flatpickr(e,{mode:"range",dateFormat:"Y-m-d",placeholder:"Select date range"})}function y(){document.querySelectorAll('form[enctype="multipart/form-data"]').forEach((e=>{e.addEventListener("submit",(function(e){const t=this.querySelector("#documents-input");if(t?.files.length>0&&(!r(t.files)||(e.preventDefault(),0))||t.files.length>1)i()}))}))}window.PHRM={formatFileSize:o,validateFiles:r,preventDefaults:a,showUploadProgress:i,showNotification:n,debounce:e,throttle:t,storage:{get:s,set:c,remove:l},FileUploadManager:u,ChatManager:d},document.addEventListener("DOMContentLoaded",(function(){p(),document.getElementById("documents-input")&&new u("documents-input"),h(),new d,m(),f(),g(),v(),y()}))}();
